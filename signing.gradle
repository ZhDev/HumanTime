/*
 * Copyright 2014 Julio García Muñoz (ZhDev)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.apache.tools.ant.taskdefs.condition.Os

ext.props = new Properties()
props.load(new FileInputStream(rootProject.file("release.properties")))

def applySigningConfig(){
    android.signingConfigs.release.storeFile file(props.keyStore)
    android.signingConfigs.release.keyAlias props.keyAlias
    android.signingConfigs.release.storePassword fetchPassword('keyStorePassword')
    android.signingConfigs.release.keyPassword fetchPassword('keyAliasPassword')
}

def fetchPassword(identifier) {
    if (!Os.isFamily(Os.FAMILY_MAC)) {
        return props.getProperty(identifier)
    }

    def keychainLabel = "release-${identifier}"
    println "Fetching keychain password with account '${rootProject.name}' and label '${keychainLabel}"

    def stdout = new ByteArrayOutputStream()
    def stderr = new ByteArrayOutputStream()
    def keychainExec = exec {
        commandLine 'security', '-q', 'find-generic-password', '-a', rootProject.name, '-gl', "${keychainLabel}"
        standardOutput = stdout
        errorOutput = stderr
        ignoreExitValue true
    }

    if (keychainExec.exitValue != 0) {
        println stdout.toString()
        println stderr.toString()
        return
    }

    (stderr.toString().trim() =~ /password: "(.*)"/)[0][1]
}